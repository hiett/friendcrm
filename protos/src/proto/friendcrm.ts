// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v3.19.1
// source: friendcrm.proto

/* eslint-disable */
import type { CallContext, CallOptions } from "nice-grpc-common";
import {
  BirthdaysSoonRequest,
  Friend,
  ListFriendsRequest,
  ListFriendsResponse,
  ReconnectSoonRequest,
  ReconnectSoonResponse,
} from "./messages";

export type FriendCRMDefinition = typeof FriendCRMDefinition;
export const FriendCRMDefinition = {
  name: "FriendCRM",
  fullName: "friendcrm.FriendCRM",
  methods: {
    addFriend: {
      name: "AddFriend",
      requestType: Friend,
      requestStream: false,
      responseType: Friend,
      responseStream: false,
      options: {},
    },
    updateFriend: {
      name: "UpdateFriend",
      requestType: Friend,
      requestStream: false,
      responseType: Friend,
      responseStream: false,
      options: {},
    },
    listFriends: {
      name: "ListFriends",
      requestType: ListFriendsRequest,
      requestStream: false,
      responseType: ListFriendsResponse,
      responseStream: false,
      options: {},
    },
    /** Birthdays Features // */
    birthdaysSoon: {
      name: "BirthdaysSoon",
      requestType: BirthdaysSoonRequest,
      requestStream: false,
      responseType: ListFriendsResponse,
      responseStream: false,
      options: {},
    },
    /** Interactions Features // */
    reconnectSoon: {
      name: "ReconnectSoon",
      requestType: ReconnectSoonRequest,
      requestStream: false,
      responseType: ReconnectSoonResponse,
      responseStream: false,
      options: {},
    },
  },
} as const;

export interface FriendCRMServiceImplementation<CallContextExt = {}> {
  addFriend(request: Friend, context: CallContext & CallContextExt): Promise<DeepPartial<Friend>>;
  updateFriend(request: Friend, context: CallContext & CallContextExt): Promise<DeepPartial<Friend>>;
  listFriends(
    request: ListFriendsRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListFriendsResponse>>;
  /** Birthdays Features // */
  birthdaysSoon(
    request: BirthdaysSoonRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ListFriendsResponse>>;
  /** Interactions Features // */
  reconnectSoon(
    request: ReconnectSoonRequest,
    context: CallContext & CallContextExt,
  ): Promise<DeepPartial<ReconnectSoonResponse>>;
}

export interface FriendCRMClient<CallOptionsExt = {}> {
  addFriend(request: DeepPartial<Friend>, options?: CallOptions & CallOptionsExt): Promise<Friend>;
  updateFriend(request: DeepPartial<Friend>, options?: CallOptions & CallOptionsExt): Promise<Friend>;
  listFriends(
    request: DeepPartial<ListFriendsRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListFriendsResponse>;
  /** Birthdays Features // */
  birthdaysSoon(
    request: DeepPartial<BirthdaysSoonRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ListFriendsResponse>;
  /** Interactions Features // */
  reconnectSoon(
    request: DeepPartial<ReconnectSoonRequest>,
    options?: CallOptions & CallOptionsExt,
  ): Promise<ReconnectSoonResponse>;
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;
